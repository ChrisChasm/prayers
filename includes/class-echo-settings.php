<?php
/**
 * Echo Prayer Settings
 *
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 * 
 * @package   Echo
 * @author 	  Kaleb Heitzman <kalebheitzman@gmail.com>
 * @link      https://github.com/kalebheitzman/echo
 * @copyright 2015 Kaleb Heitzman
 * @license   GPL-3.0
 * @version   0.9.0
 */

class EchoSettings {

	private $echo_settings_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'echo_settings_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'echo_settings_page_init' ) );
	}

	public function echo_settings_add_plugin_page() {
		add_submenu_page(
	        'edit.php?post_type=prayer',
	        'Echo Prayer Settings',
	        'Settings',
	        'edit_posts',
	        'settings',
	        array( $this, 'echo_settings_create_admin_page' )
	    );
		/*add_menu_page(
			'Echo Prayer Settings', // page_title
			'Echo', // menu_title
			'manage_options', // capability
			'echo-settings', // menu_slug
			array( $this, 'echo_settings_create_admin_page' ), // function
			'dashicons-heart', // icon_url
			81 // position
		);*/
	}

	public function echo_settings_create_admin_page() {
		$this->echo_settings_options = get_option( 'echo_settings_options' ); ?>

		<div class="wrap">
			<h2>Echo Prayer Settings</h2>
			<p>Adjust Echo to fit your website. For documentation visit <a href="https://github.com/kalebheitzman/echo/blob/master/documentation.md" target="_blank">documentation.md</a> on our github <a href="https://github.com/kalebheitzman/echo" target="_blank">project page.</a></p>

			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'echo_settings_option_group' );
					do_settings_sections( 'echo-settings-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function echo_settings_page_init() {
		register_setting(
			'echo_settings_option_group', // option_group
			'echo_settings_options', // option_name
			array( $this, 'echo_settings_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'echo_settings_setting_section', // id
			'Settings', // title
			array( $this, 'echo_settings_section_info' ), // callback
			'echo-settings-admin' // page
		);

		/*add_settings_field(
			'notification_email', // id
			'Notification Email', // title
			array( $this, 'notification_email_callback' ), // callback
			'echo-settings-admin', // page
			'echo_settings_setting_section' // section
		);*/

		add_settings_field(
			'notification_user', // id
			'User Notifications', // title
			array( $this, 'notification_user_callback' ), // callback
			'echo-settings-admin', // page
			'echo_settings_setting_section' // section
		);

		add_settings_field(
			'prayer_form_response', // id
			'Prayer Form Response', // title
			array( $this, 'prayer_form_response_callback' ), // callback
			'echo-settings-admin', // page
			'echo_settings_setting_section' // section
		);

		/*add_settings_field(
			'mailchimp_api_key', // id
			'MailChimp API Key', // title
			array( $this, 'mailchimp_api_key_callback' ), // callback
			'echo-settings-admin', // page
			'echo_settings_setting_section' // section
		);*/

		add_settings_field( // #2582EA
			'button_primary_color', // id
			'Button Background Color', // title
			array( $this, 'button_primary_color_callback' ), // callback
			'echo-settings-admin', // page
			'echo_settings_setting_section' // section
		);

		add_settings_field( // #45D680
			'button_secondary_color', // id
			'Button Active Background Color', // title
			array( $this, 'button_secondary_color_callback' ), // callback
			'echo-settings-admin', // page
			'echo_settings_setting_section' // section
		);

		add_settings_field( // #fff
			'button_text_color', // id
			'Button Text Color', // title
			array( $this, 'button_text_color_callback' ), // callback
			'echo-settings-admin', // page
			'echo_settings_setting_section' // section
		);

		add_settings_field( // #efefef
			'taxonomy_text_color', // id
			'Taxonomy Text Color', // title
			array( $this, 'taxonomy_text_color_callback' ), // callback
			'echo-settings-admin', // page
			'echo_settings_setting_section' // section
		);

		add_settings_field( // #333
			'taxonomy_background_color', // id
			'Taxonomy Background Color', // title
			array( $this, 'taxonomy_background_color_callback' ), // callback
			'echo-settings-admin', // page
			'echo_settings_setting_section' // section
		);

		add_settings_field(
			'categories_enabled', // id
			'Categories Enabled', // title
			array( $this, 'categories_enabled_callback' ), // callback
			'echo-settings-admin', // page
			'echo_settings_setting_section' // section
		);

		add_settings_field(
			'tags_enabled', // id
			'Tags Enabled', // title
			array( $this, 'tags_enabled_callback' ), // callback
			'echo-settings-admin', // page
			'echo_settings_setting_section' // section
		);

		/*add_settings_field(
			'default_category', // id
			'Default Category', // title
			array( $this, 'default_category_callback' ), // callback
			'echo-settings-admin', // page
			'echo_settings_setting_section' // section
		);*/

		/*add_settings_field(
			'example_radio', // id
			'Example Radio', // title
			array( $this, 'example_radio_callback' ), // callback
			'echo-settings-admin', // page
			'echo_settings_setting_section' // section
		);*/
	}

	public function echo_settings_sanitize($input) {
		$sanitary_values = array();
		
		if ( isset( $input['notification_email'] ) ) {
			$sanitary_values['notification_email'] = sanitize_text_field( $input['notification_email'] );
		}

		if ( isset( $input['notification_user'] ) ) {
			$sanitary_values['notification_user'] = sanitize_text_field( $input['notification_user'] );
		}

		if ( isset( $input['mailchimp_api_key'] ) ) {
			$sanitary_values['mailchimp_api_key'] = sanitize_text_field( $input['mailchimp_api_key'] );
		}

		if ( isset( $input['button_primary_color'] ) ) {
			$sanitary_values['button_primary_color'] = sanitize_text_field( $input['button_primary_color'] );
		}

		if ( isset( $input['button_secondary_color'] ) ) {
			$sanitary_values['button_secondary_color'] = sanitize_text_field( $input['button_secondary_color'] );
		}

		if ( isset( $input['button_text_color'] ) ) {
			$sanitary_values['button_text_color'] = sanitize_text_field( $input['button_text_color'] );
		}

		if ( isset( $input['taxonomy_background_color'] ) ) {
			$sanitary_values['taxonomy_background_color'] = sanitize_text_field( $input['taxonomy_background_color'] );
		}

		if ( isset( $input['taxonomy_text_color'] ) ) {
			$sanitary_values['taxonomy_text_color'] = sanitize_text_field( $input['taxonomy_text_color'] );
		}

		if ( isset( $input['categories_enabled'] ) ) {
			$sanitary_values['categories_enabled'] = $input['categories_enabled'];
		}

		if ( isset( $input['tags_enabled'] ) ) {
			$sanitary_values['tags_enabled'] = $input['tags_enabled'];
		}

		if ( isset( $input['default_category'] ) ) {
			$sanitary_values['default_category'] = $input['default_category'];
		}

		if ( isset( $input['prayer_form_response'] ) ) {
			$sanitary_values['prayer_form_response'] = wp_kses( $input['prayer_form_response'] );
		}

		if ( isset( $input['example_radio'] ) ) {
			$sanitary_values['example_radio'] = $input['example_radio'];
		}

		return $sanitary_values;
	}

	public function echo_settings_section_info() {
		
	}

	/*public function notification_email_callback() {
		printf(
			'<input class="regular-text" type="text" name="echo_settings_options[notification_email]" id="notification_email" value="%s" placeholder="prayer@example.com">',
			isset( $this->echo_settings_options['notification_email'] ) ? esc_attr( $this->echo_settings_options['notification_email']) : ''
		);
	}*/

	public function notification_user_callback() {
		$args = array(
			'name' => 'echo_settings_options[notification_user]', 
			'id' => 'notification_user',
			'selected' => $this->echo_settings_options['notification_user'],
		);
		wp_dropdown_users( $args ); 
		echo ' <small>' . __( 'User that is notified by email when a new prayer request is submitted.', 'echo' ) . '</small>';
		?>
		<?php
	}

	public function mailchimp_api_key_callback() {
		printf(
			'<input class="regular-text" type="text" name="echo_settings_options[mailchimp_api_key]" id="mailchimp_api_key" value="%s">',
			isset( $this->echo_settings_options['mailchimp_api_key'] ) ? esc_attr( $this->echo_settings_options['mailchimp_api_key']) : ''
		);
	}

	public function button_primary_color_callback() {
		printf(
			'<input class="regular-text color-field" type="text" name="echo_settings_options[button_primary_color]" id="button_primary_color" value="%s">',
			isset( $this->echo_settings_options['button_primary_color'] ) ? esc_attr( $this->echo_settings_options['button_primary_color']) : '#2582EA'
		);
		echo ' <small>' . __( 'Color of prayer button.', 'echo' ) . '</small>';
	}

	public function button_secondary_color_callback() {
		printf(
			'<input class="regular-text color-field" type="text" name="echo_settings_options[button_secondary_color]" id="button_secondary_color" value="%s">',
			isset( $this->echo_settings_options['button_secondary_color'] ) ? esc_attr( $this->echo_settings_options['button_secondary_color']) : '#45D680'
		);
		echo ' <small>' . __( 'Color of highlighted prayer button.', 'echo' ) . '</small>';
	}

	public function button_text_color_callback() {
		printf(
			'<input class="regular-text color-field" type="text" name="echo_settings_options[button_text_color]" id="button_text_color" value="%s">',
			isset( $this->echo_settings_options['button_text_color'] ) ? esc_attr( $this->echo_settings_options['button_text_color']) : '#fff'
		);
		echo ' <small>' . __( 'Text color of prayer button.', 'echo' ) . '</small>';
	}

	public function taxonomy_background_color_callback() {
		printf(
			'<input class="regular-text color-field" type="text" name="echo_settings_options[taxonomy_background_color]" id="taxonomy_background_color" value="%s">',
			isset( $this->echo_settings_options['taxonomy_background_color'] ) ? esc_attr( $this->echo_settings_options['taxonomy_background_color']) : '#efefef'
		);
		echo ' <small>' . __( 'Text color of taxonomy pill.', 'echo' ) . '</small>';
	}

	public function taxonomy_text_color_callback() {
		printf(
			'<input class="regular-text color-field" type="text" name="echo_settings_options[taxonomy_text_color]" id="taxonomy_text_color" value="%s">',
			isset( $this->echo_settings_options['taxonomy_text_color'] ) ? esc_attr( $this->echo_settings_options['taxonomy_text_color']) : '#333'
		);
		echo ' <small>' . __( 'Text color of taxonomy pill.', 'echo' ) . '</small>';
	}

	public function categories_enabled_callback() {
		?> <fieldset class="echo-inline-radios"><?php $checked = ( isset( $this->echo_settings_options['categories_enabled'] ) && $this->echo_settings_options['categories_enabled'] === '1' ) ? 'checked' : '' ; ?>
		<label for="categories_enabled-0"><input type="radio" name="echo_settings_options[categories_enabled]" id="categories_enabled-0" value="1" <?php echo $checked; ?>> Yes</label>
		<?php $checked = ( isset( $this->echo_settings_options['categories_enabled'] ) && $this->echo_settings_options['categories_enabled'] === '0' ) ? 'checked' : '' ; ?>
		<label for="categories_enabled-1"><input type="radio" name="echo_settings_options[categories_enabled]" id="categories_enabled-1" value="0" <?php echo $checked; ?>> No</label>
		<?php echo '<small>' . __( 'Enable frontend users to select a category for thier prayer request?', 'echo' ) . '</small>'; ?>
		</fieldset> <?php

	}

	public function tags_enabled_callback() {
		?> <fieldset class="echo-inline-radios"><?php $checked = ( isset( $this->echo_settings_options['tags_enabled'] ) && $this->echo_settings_options['tags_enabled'] === '1' ) ? 'checked' : '' ; ?>
		<label for="tags_enabled-0"><input type="radio" name="echo_settings_options[tags_enabled]" id="tags_enabled-0" value="1" <?php echo $checked; ?>> Yes</label>
		<?php $checked = ( isset( $this->echo_settings_options['tags_enabled'] ) && $this->echo_settings_options['tags_enabled'] === '0' ) ? 'checked' : '' ; ?>
		<label for="tags_enabled-1"><input type="radio" name="echo_settings_options[tags_enabled]" id="tags_enabled-1" value="0" <?php echo $checked; ?>> No</label>
		<?php echo '<small>' . __( 'Enable frontend users to tag thier prayer request?', 'echo' ) . '</small>'; ?>
		</fieldset> <?php
	}

	public function default_category_callback() {
		?> <select name="echo_settings_options[default_category]" id="default_category">
			<?php $selected = (isset( $this->echo_settings_options['default_category'] ) && $this->echo_settings_options['default_category'] === '1') ? 'selected' : '' ; ?>
			<option value="1" <?php echo $selected; ?>>Yes</option>
			<?php $selected = (isset( $this->echo_settings_options['default_category'] ) && $this->echo_settings_options['default_category'] === '0') ? 'selected' : '' ; ?>
			<option value="0" <?php echo $selected; ?>>No</option>
		</select> <?php
	}

	public function prayer_form_response_callback() { 
		$content = isset( $this->echo_settings_options['prayer_form_response'] ) ? $this->echo_settings_options['prayer_form_response'] : '';
		$settings = array(
			'textarea_name' => 'echo_settings_options[prayer_form_response]',
			'textarea_rows' => 8,
			'media_buttons' => false,
		);
		wp_editor( $content, 'prayer_form_response', $settings );
	}

	public function example_radio_callback() {
		?> <fieldset><?php $checked = ( isset( $this->echo_settings_options['example_radio'] ) && $this->echo_settings_options['example_radio'] === '1' ) ? 'checked' : '' ; ?>
		<label for="example_radio-0"><input type="radio" name="echo_settings_options[example_radio]" id="example_radio-0" value="1" <?php echo $checked; ?>> Yes</label><br>
		<?php $checked = ( isset( $this->echo_settings_options['example_radio'] ) && $this->echo_settings_options['example_radio'] === '0' ) ? 'checked' : '' ; ?>
		<label for="example_radio-1"><input type="radio" name="echo_settings_options[example_radio]" id="example_radio-1" value="0" <?php echo $checked; ?>> No</label></fieldset> <?php
	}

}
if ( is_admin() )
	$echo_settings = new EchoSettings();

/* 
 * Retrieve this value with:
 * $echo_settings_options = get_option( 'echo_settings_options' ); // Array of All Options
 * $notification_email = $echo_settings_options['notification_email']; // Notification Email
 * $notification_user = $echo_settings_options['notification_user']; // Notification User
 * $mailchimp_api_key = $echo_settings_options['mailchimp_api_key']; // MailChimp API Key
 * $button_primary_color = $echo_settings_options['button_primary_color']; // Primary Color
 * $button_secondary_color = $echo_settings_options['button_secondary_color']; // Secondary Color
 * $categories_enabled = $echo_settings_options['categories_enabled']; // Categories Enabled
 * $tags_enabled = $echo_settings_options['tags_enabled']; // Tags Enabled
 * $default_category = $echo_settings_options['default_category']; // Default Category
 * $prayer_form_response = $echo_settings_options['prayer_form_response']; // Example Textarea
 * $example_radio = $echo_settings_options['example_radio']; // Example Radio
 */

